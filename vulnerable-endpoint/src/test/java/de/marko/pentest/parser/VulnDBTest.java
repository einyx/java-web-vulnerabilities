package de.marko.pentest.parser;

import de.marko.pentest.db.DatabaseJPAConnector;
import de.marko.pentest.db.entity.User;
import de.marko.pentest.db.entity.UserMetaData;
import java.io.IOException;
import org.testng.Assert;
import org.testng.annotations.Test;

/**
 * @author marko
 * @version 1.0.0.
 * @date 05.01.2018
 */
@Test
public class VulnDBTest extends DatabaseTest {

	@Test
	public void T001_connectToDb() throws IOException {
		this.setup("vuln");
	}

	@Test
	public void T002_insertValidUser() {
		User alice = new User("alice", "password123", "123456");

		DatabaseJPAConnector.connect().persist(alice);
	}

	@Test
	public void T003_getUserToken() {
		String name = "alice";

		String password = "password123";

		String query = "SELECT u.id, u.name, u.password, u.token, u.version"
			+ " FROM Users u"
			+ " WHERE name = '" + name
			+ "' AND password = '" + password + "'";

		User user = DatabaseJPAConnector.connect()
			.nativeSelectQuery(query, User.class)
			.stream()
			.findFirst()
			.orElse(null);

		Assert.assertEquals(user.getName(), "alice");
	}

	@Test
	public void T004_insertMetaData() {
		String accessQuery = new StringBuilder("INSERT INTO metadata (userId, useragent, ip) ")
			.append("VALUES (")
			.append(1).append(", '")
			.append("Agent").append("', '")
			.append("1337").append("' ")
			.append(")").toString();

		DatabaseJPAConnector.connect().nativeInsertQuery(accessQuery);

		UserMetaData metaData = DatabaseJPAConnector.connect().findById(UserMetaData.class, 1L);

		Assert.assertEquals(metaData.getUseragent(), "Agent");
	}

}
