package de.marko.pentest.rest.handler;

import de.marko.pentest.db.DatabaseJPAConnector;
import de.marko.pentest.db.entity.User;
import io.vertx.core.Handler;
import io.vertx.ext.web.RoutingContext;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Objects;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * @author mawn
 * @version 1.0.0.
 * @date 05.01.2018
 */
public class CreateUserHandler implements Handler<RoutingContext> {

	private final static Logger LOGGER = LoggerFactory.getLogger(CreateUserHandler.class);

	@Override
	public void handle(RoutingContext routingContext) {

			String name = routingContext.request().getParam("name");

			String password = routingContext.request().getParam("password");

			String apiToken = name + password;

			LOGGER.debug("get params: " + name);

			byte[] secret = null;

			try {
				MessageDigest md = MessageDigest.getInstance("MD5");
				md.update(apiToken.getBytes());
				secret = md.digest();
			} catch (NoSuchAlgorithmException e) {
				LOGGER.error("Cannot create secret.");
			}

			StringBuilder sb = new StringBuilder();

			for (byte b : Objects.requireNonNull(secret)) {
				sb.append(String.format("%02x", b & 0xff));
			}

			String token = sb.toString();

			User user = new User(name, password, token);

			try {
				DatabaseJPAConnector.connect("vuln").persist(user);
			} catch (Exception e) {
				LOGGER.error("User could not created.", e);
				routingContext.response().setStatusCode(500).end("User could not created.");
			}

		if (!routingContext.response().ended()) {
			routingContext.response().setStatusCode(200).end(token);
		}
	}

}
