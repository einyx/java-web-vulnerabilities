package de.marko.pentest.rest.handler;

import de.marko.pentest.db.DatabaseJPAConnector;
import de.marko.pentest.db.entity.User;
import io.vertx.core.Handler;
import io.vertx.ext.web.RoutingContext;
import java.util.Base64;

/**
 * @author marko
 * @version 1.0.0.
 * @date 05.01.2018
 */
public class GetTokenHandlerV5 implements Handler<RoutingContext> {

	@Override
	public void handle(RoutingContext routingContext) {

		String nameDecodedRot13 = rot13(routingContext.request().getParam("name"));

		String passwordDecodedRot13 = rot13(routingContext.request().getParam("password"));

		byte[] name = Base64.getDecoder().decode(nameDecodedRot13);

		byte[] password = Base64.getDecoder().decode(passwordDecodedRot13);

		String query = new StringBuilder("SELECT u.id, u.name, u.password, u.token, u.version")
			.append(" FROM Users u")
			.append(" WHERE name = '").append(name)
			.append("' AND password = '").append(password)
			.append("'")
			.toString();

		User user = DatabaseJPAConnector.connect()
			.nativeSelectQuery(query, User.class)
			.stream()
			.findFirst()
			.orElse(null);

		if (user != null) {
			routingContext.response().setStatusCode(200).end(user.getToken());
		} else {
			routingContext.response().setStatusCode(500).end("");
		}
	}

	private String rot13(String input) {
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < input.length(); i++) {
			char c = input.charAt(i);
			if       (c >= 'a' && c <= 'm') c += 13;
			else if  (c >= 'A' && c <= 'M') c += 13;
			else if  (c >= 'n' && c <= 'z') c -= 13;
			else if  (c >= 'N' && c <= 'Z') c -= 13;
			sb.append(c);
		}
		return sb.toString();
	}
}
